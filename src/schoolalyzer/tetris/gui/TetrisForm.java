/** 
 * 
 * @author Joan Alba Maldonado
 */
//Nota: Para utilizar el JFrame, es necesario definirlo en tipoPrograma en configuracion.Otros.
package schoolalyzer.tetris.gui;


import java.awt.Graphics;

import schoolalyzer.tetris.principal.TetrisMain;

//import java.awt.Image;

//import java.awt.Toolkit;
import javax.swing.ImageIcon;

public class TetrisForm extends javax.swing.JFrame {

    public TetrisForm() {
        initComponents();
        //this.setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getClassLoader().getResource("img/1.gif"))); 
        setIconImage(new ImageIcon(getClass().getResource("/schoolalyzer/tetris/img/1.gif")).getImage());
        addKeyListener(new schoolalyzer.tetris.logica.Teclado());
    }

    //Devuelve el componente PanelJuego:
    public Graphics getGamePanel() {
        return this.PanelJuego.getGraphics();
    }

    /*
    public boolean imageUpdate(Image img, int flags, int x, int y, int w, int h)
    {
    //NOTA: echarle un vistazo a MediaTracker.

    //System.out.println("Image update: flags="+flags+" x="+x+" y="+y+" w="+w+" h="+h);
    //repaint();

    if (flags >= ALLBITS)
    {
    Main.juego.imagenBuffer.getGraphics().drawImage(img, x, y, w, h, null);
    Main.juego.representarTodo(Main.juego.getContenedorGrafico());
    }

    return true;
    }
     */
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelJuego = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Schoolalyzer Tetris");
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.white);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        PanelJuego.setBackground(new java.awt.Color(255, 255, 255));
        PanelJuego.setPreferredSize(new java.awt.Dimension(0, 0));
        PanelJuego.setLayout(new javax.swing.BoxLayout(PanelJuego, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 3000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 3000, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        TetrisMain.ventanaPrincipal = null;
        TetrisMain.game = null;
        TetrisMain.appletPrincipal = null;
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelJuego;
    // End of variables declaration//GEN-END:variables
}
